apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-tenant-values
  namespace: minio-prod
data:
  tenant-prod.yaml: |
    tenant:
      name: minio1
      namespace: minio-prod
      pools:
        - name: pool-0
          servers: 4
          volumesPerServer: 2
          size: 2Ti
          storageClassName: gp3
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: v1.min.io/tenant
                          operator: In
                          values: ["minio1"]
                    topologyKey: kubernetes.io/hostname
      certificate:
        requestAutoCert: false
        externalCertSecret:
          - name: minio-tls-api
            type: cert-manager.io/v1
          - name: minio-tls-console
            type: cert-manager.io/v1
      configuration:
        name: minio-tenant-env
      configSecret:
        name: minio-tenant-env
        existingSecret: true
      ingress:
        api:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          host: s3.minio-prod.example.com
          tls:
            - hosts: ["s3.minio-prod.example.com"]
              secretName: minio-tls-api
        console:
          enabled: true
          ingressClassName: nginx
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-prod
            kubernetes.io/tls-acme: "true"
            nginx.ingress.kubernetes.io/backend-protocol: HTTPS
          host: console.minio-prod.example.com
          tls:
            - hosts: ["console.minio-prod.example.com"]
              secretName: minio-tls-console
      resources:
        requests:
          cpu: "1000m"
          memory: "4Gi"
        limits:
          cpu: "4000m"
          memory: "8Gi"
      podSecurityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
    metrics:
      enabled: true
